{
    "name": "torrent-stream-server",
    "description": "HTTP server to convert any torrent to video stream",
    "version": "1.6.0",
    "author": "KiraLT",
    "bin": {
        "torrent-stream-server": "lib/index.js"
    },
    "bugs": {
        "url": "https://github.com/KiraLT/torrent-stream-server/issues"
    },
    "dependencies": {
        "ajv": "^6.12.6",
        "check-disk-space": "^2.1.0",
        "cheerio": "^1.0.0-rc.3",
        "cors": "^2.8.5",
        "express": "^4.17.1",
        "express-async-errors": "^3.1.1",
        "express-winston": "^4.0.5",
        "http-errors": "^1.8.0",
        "jsonwebtoken": "^8.5.1",
        "mime-types": "^2.1.27",
        "mustache": "^4.0.1",
        "mustache-express": "^1.3.0",
        "node-fetch": "^2.6.1",
        "nyaapi": "^2.3.3",
        "parse-torrent": "^9.1.0",
        "prettier": "^2.2.1",
        "pump": "^3.0.0",
        "range-parser": "^1.2.1",
        "swagger-ui-express": "^4.1.5",
        "timeago.js": "^4.0.2",
        "trammel": "^4.0.0",
        "webtorrent": "^0.112.0",
        "winston": "^3.3.3",
        "winston-loggly-bulk": "^3.1.1",
        "yamljs": "^0.3.0",
        "yargs": "^16.1.1"
    },
    "devDependencies": {
        "@openapitools/openapi-generator-cli": "^2.1.7",
        "@types/cheerio": "^0.22.22",
        "@types/cors": "^2.8.8",
        "@types/express": "^4.17.9",
        "@types/express-serve-static-core": "^4.17.14",
        "@types/express-winston": "^4.0.0",
        "@types/http-errors": "^1.8.0",
        "@types/jest": "^26.0.15",
        "@types/jsonwebtoken": "^8.5.0",
        "@types/mime-types": "^2.1.0",
        "@types/mustache-express": "^1.2.1",
        "@types/node-fetch": "^2.5.7",
        "@types/nyaapi": "^2.3.0",
        "@types/parse-torrent": "^5.8.3",
        "@types/pump": "^1.1.0",
        "@types/swagger-ui-express": "^4.1.2",
        "@types/webtorrent": "^0.109.0",
        "@types/yamljs": "^0.2.31",
        "@types/yargs": "^16.0.2",
        "nodemon": "^2.0.6",
        "ts-jest": "^26.4.4",
        "ts-node": "^9.0.0",
        "typescript": "^4.1.2",
        "jest": "^26.6.3"
    },
    "engines": {
        "node": "12.x"
    },
    "files": [
        "lib/**/*",
        "frontend/build/**/*",
        "swagger.yaml"
    ],
    "homepage": "https://github.com/KiraLT/torrent-stream-server",
    "keywords": [
        "html5-video",
        "stream",
        "torrent",
        "torrent-client",
        "torrent-downloader",
        "torrent-search",
        "torrents",
        "video",
        "video-stream"
    ],
    "license": "MIT",
    "main": "lib/index.js",
    "prettier": {
        "printWidth": 100,
        "semi": false,
        "singleQuote": true,
        "jsxSingleQuote": false,
        "trailingComma": "es5",
        "arrowParens": "always",
        "proseWrap": "always"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/KiraLT/torrent-stream-server.git"
    },
    "scripts": {
        "build": "npm run build-backend && npm run build-frontend",
        "build-backend": "tsc",
        "build-frontend": "npm run --prefix frontend build",
        "build-swagger": "npm run build-swagger-frontend && npm run build-swagger-backend",
        "build-swagger-backend": "cp frontend/src/helpers/client/models/* src/models && find src/models -name '*.ts' -print0 | xargs -0 sed -i 's/..\\/runtime/..\\/helpers/g'",
        "build-swagger-frontend": "TS_POST_PROCESS_FILE='prettier --write' openapi-generator-cli generate -i swagger.yaml -g typescript-fetch -o frontend/src/helpers/client --enable-post-process-file",
        "dev-backend": "NODE_ENV=development nodemon --watch 'src/**/*' -e 'mustache,ts,json,xml,yaml' --exec 'ts-node' src/index.ts serve",
        "dev-frontend": "npm --prefix frontend run start",
        "heroku-cleanup": "rm -rf frontend/node_modules",
        "postinstall": "[ ! -d frontend/src ] || npm --prefix frontend install",
        "prettify": "prettier --write \"{src,frontend/src}/**/*.{js,ts,tsx,json,css,scss}\"",
        "start": "node lib/index.js serve",
        "uninstall": "rm -rf frontend/node_mobules",
        "test": "jest src"
    },
    "jest": {
        "preset": "ts-jest"
    }
}
